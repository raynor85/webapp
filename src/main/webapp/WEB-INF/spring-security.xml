<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<beans:import resource="classpath*:applicationContext.xml" />

	<http pattern="/resources/**" security="none" />
	<http auto-config="true" use-expressions="true">
		<!-- Enable csrf protection -->
		<csrf />
		<form-login login-page="/sign" default-target-url="/dashboard" always-use-default-target="false" authentication-failure-url="/sign" username-parameter="username" password-parameter="password" />
		<intercept-url pattern="/dashboard**/**" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/settings**/**" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/administration**/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/1.0**/**" access="hasRole('ROLE_USER')" />
		<!-- Enable remember me - 2 weeks -->
		<remember-me token-validity-seconds="1209600" remember-me-parameter="remember-me" data-source-ref="dataSource" />
		<!-- Adds social authentication filter to the Spring Security filter chain. -->
		<custom-filter ref="socialAuthenticationFilter" before="PRE_AUTH_FILTER" />
	</http>

	<!-- Configures the authentication manager bean which processes authentication requests. -->
	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="userAuthenticateServiceImpl">
			<password-encoder ref="passwordEncoder" />
		</authentication-provider>
		<authentication-provider ref="socialAuthenticationProvider" />
	</authentication-manager>

	<!-- Password encoder -->
	<beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

	<!-- Configures the social authentication provider which processes authentication requests made by using supported social authentication services (FB, Twitter and so on) -->
	<beans:bean id="socialAuthenticationProvider" class="org.springframework.social.security.SocialAuthenticationProvider">
		<beans:constructor-arg index="0" ref="usersConnectionRepository" />
		<beans:constructor-arg index="1" ref="socialUserAuthenticateServiceImpl" />
	</beans:bean>

	<!-- Configures the social authentication filter which integrates Spring Social with Spring Security -->
	<beans:bean id="socialAuthenticationFilter" class="org.springframework.social.security.SocialAuthenticationFilter">
		<beans:constructor-arg index="0" ref="authenticationManager" />
		<beans:constructor-arg index="1" ref="userIdSource" />
		<beans:constructor-arg index="2" ref="usersConnectionRepository" />
		<beans:constructor-arg index="3" ref="connectionFactoryLocator" />
		<!-- Sets the url of the registration - use in case the sign in has failed -->
		<beans:property name="signupUrl" value="/user/register" />
		<!-- Sets the url of the dashboard - use in case the sign in has succeed -->
		<beans:property name="postLoginUrl" value="/dashboard" />
	</beans:bean>

	<!-- This bean encrypts the authorization details of the connection -->
	<beans:bean id="textEncryptor" class="org.springframework.security.crypto.encrypt.Encryptors" factory-method="noOpText" />

	<!-- This bean determines the account ID of the user -->
	<beans:bean id="userIdSource" class="org.springframework.social.security.AuthenticationNameUserIdSource" />

</beans:beans>
