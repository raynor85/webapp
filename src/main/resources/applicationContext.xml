<?xml  version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						   http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
						   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
						   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
						   http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
						   http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd" >

	<context:annotation-config />
	<context:component-scan base-package="com.updapy" />

	<mvc:resources mapping="/robots.txt" location="/robots.txt" order="0"/>
	<mvc:resources mapping="/sitemap.xml" location="/sitemap.xml" order="1"/>
	<mvc:resources mapping="/favicon.ico" location="/favicon.ico" order="2"/>	
	<mvc:resources mapping="/resources/**" location="/resources/" order="3" />
	<mvc:annotation-driven/>

	<!--  View resolvers and Tiles -->
	<bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView" />
		<property name="order" value="0" />
	</bean>

	<bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/pages/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="1" />
	</bean>
		
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
	  <property name="definitions">
		<list>
			<value>/WEB-INF/tile-defs/tiles.xml</value>
		</list>
	  </property>
	</bean>
	
	<!-- Messages and i18n -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames" value="classpath:i18n/messages,classpath:messages" />
		<property name="defaultEncoding" value="UTF-8"/>
	</bean>
	 
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<property name="defaultLocale" value="en"/>
	</bean>
 
	<mvc:interceptors>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="lang" />
		</bean>
	</mvc:interceptors>

	<!-- Repositories -->
	<jpa:repositories base-package="com.updapy.repository" />

	<!-- DB and Transactions -->
	<tx:annotation-driven />
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<beans profile="default">
		<!-- <jdbc:embedded-database id="dataSource"/> -->
		<bean class="java.net.URI" id="dbUrl">
			<constructor-arg value="#{systemEnvironment['DATABASE_URL']}"/>
		</bean>

		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
			<property name="driverClassName" value="org.postgresql.Driver" />
			<property name="url" value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() }"/>
			<property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }"/>
			<property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }"/>
		</bean>
		
		<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
			<property name="dataSource" ref="dataSource"/>
			<property name="jpaVendorAdapter">
				<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
			</property>
			<property name="jpaProperties">
				<props>
					<!-- <prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop> -->
					<prop key="hibernate.show_sql">true</prop>
					<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
					<prop key="hibernate.hbm2ddl.auto">create</prop>
				</props>
			</property>
		</bean>
	</beans>

	<beans profile="prod">
		<bean class="java.net.URI" id="dbUrl">
			<constructor-arg value="#{systemEnvironment['DATABASE_URL']}"/>
		</bean>

		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
			<property name="url" value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() }"/>
			<property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }"/>
			<property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }"/>
		</bean>
		
		<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
			<property name="dataSource" ref="dataSource"/>
			<property name="jpaVendorAdapter">
				<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
			</property>
			<property name="jpaProperties">
				<props>
					<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
					<prop key="hibernate.show_sql">false</prop>
					<!-- change this to 'verify' before running as a production app -->
					<prop key="hibernate.hbm2ddl.auto">create</prop>
				</props>
			</property>
		</bean>
	</beans>

</beans>
